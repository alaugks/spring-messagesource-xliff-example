name: Push Docker Image to ECR
run-name: Push Docker Image to ECR [${{ github.ref_name }}]
on:
  workflow_dispatch:
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{runner.os}}-maven-${{hashFiles('**/pom.xml')}}
          restore-keys: |
            ${{runner.os}}-maven-    

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-package: 'jdk'
          java-version: '17'
          check-latest: true
          cache: 'maven'

      - name: Install & Run Tests
        run: |
          mvn clean install
          mvn test

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-central-1

      - name: AWS ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Evaluate Docker Tag
        run: |
          if [[ '${{github.ref_type}}' == 'tag' ]]; then
            echo "DOCKER_TAG=${{github.ref_name}}" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: spring-messagesource-xliff-app
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$DOCKER_TAG
